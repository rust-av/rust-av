name: rust-av

on: [push, pull_request]

jobs:
  clippy-rustfmt:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: clippy, rustfmt

    - name: Run rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: Run clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all --all-features


  build-examples:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install nasm
      run: |
        sudo apt-get install nasm

    - name: Install libvpx and opus
      run: |
        sudo apt-get install libvpx-dev libopus-dev

    - name: Build examples
      run: |
        cargo build --examples


  grcov-coveralls:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Run cargo clean
      run: |
        cargo clean

    - name: Run tests
      env:
        CARGO_INCREMENTAL: 0
        RUSTC_BOOTSTRAP: 1
        RUSTFLAGS: >
          -Zprofile -Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off
          -Cpanic=abort -Zpanic_abort_tests
        RUSTDOCFLAGS: >
          -Zprofile -Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off
          -Cpanic=abort -Zpanic_abort_tests
      run: |
        cargo test --all --all-features --verbose

    - name: Run grcov
      id: coverage
      uses: actions-rs/grcov@v0.1

    - name: Coveralls upload
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ${{ steps.coverage.outputs.report }}

  test-x86_64:
    strategy:
      matrix:
        platform: [macOS-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2

    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all --all-features --verbose

    - name: Run bench
      uses: actions-rs/cargo@v1
      with:
        command: bench
        args: --all --all-features --verbose

    - name: Run doc
      uses: actions-rs/cargo@v1
      with:
        command: doc
        args: --all --all-features --verbose
