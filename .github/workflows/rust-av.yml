name: rust-av

on:
  push:
    branches:
      - master
    paths:
      - '**.rs'
      - '**.sh'
      - '**.yml'
      - '**.toml'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**.rs'
      - '**.sh'
      - '**.yml'
      - '**.toml'

env:
  # CI doesn't benefit from incremental builds, this just increases cache size
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

  #
  # Dependency versioning
  #

  GRCOV_VERSION: "0.8.13"

jobs:
  clippy-rustfmt:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Run rustfmt
      run: |
        cargo fmt --all -- --check

    - name: Run clippy
      run: |
        cargo clippy --workspace --all-features --all-targets

  grcov-codecov:

    needs: clippy-rustfmt

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview

    - name: Install grcov
      env:
        GRCOV_LINK: https://github.com/mozilla/grcov/releases/download
      run: |
        curl -L "$GRCOV_LINK/v$GRCOV_VERSION/grcov-x86_64-unknown-linux-musl.tar.bz2" |
        tar xj -C $HOME/.cargo/bin

    - name: Run tests
      env:
        RUSTFLAGS: "-Dwarnings -Cinstrument-coverage"
        LLVM_PROFILE_FILE: "rust-av-%p-%m.profraw"
      run: |
        cargo test --workspace

    - name: Get coverage data for codecov
      run: |
        grcov . --binary-path ./target/debug/ -s . -t lcov --branch \
              --ignore-not-existing --ignore "/*" --ignore "../*" -o lcov.info

    - name: Codecov upload
      uses: codecov/codecov-action@v4
      with:
        files: lcov.info
        token: ${{ secrets.CODECOV_TOKEN }}

  test:
    strategy:
      matrix:
        platform: [macOS-latest, ubuntu-latest, windows-latest]

    needs: clippy-rustfmt

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - uses: Swatinem/rust-cache@v2

    - name: Run tests
      run: |
        cargo test --workspace --all-features

    - name: Run doc
      run: |
        cargo doc --workspace --all-features

  wasm-test:

    runs-on: ubuntu-latest

    needs: [test]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: wasm32-unknown-unknown

      - name: Install wasm-pack
        uses: taiki-e/install-action@v2
        with:
          tool: wasm-pack

      - name: Run tests
        run: |
          wasm-pack test --headless --chrome --no-default-features --workspace
